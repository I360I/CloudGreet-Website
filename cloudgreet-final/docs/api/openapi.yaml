openapi: 3.0.3
info:
  title: CloudGreet API
  description: Professional AI receptionist for service contractors. Handle calls 24/7, schedule appointments, provide estimates.
  version: 1.0.0
  contact:
    name: CloudGreet Support
    email: support@cloudgreet.com
    url: https://cloudgreet.com
  license:
    name: Proprietary
    url: https://cloudgreet.com/terms

servers:
  - url: https://cloudgreet.com/api
    description: Production server
  - url: http://localhost:3000/api
    description: Development server

security:
  - BearerAuth: []
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health Check
      description: Check API health status
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  uptime:
                    type: number
                    example: 12345

  /auth/register:
    post:
      summary: User Registration
      description: Register a new business user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - businessName
                - businessType
                - firstName
                - lastName
                - email
                - password
                - phone
              properties:
                businessName:
                  type: string
                  example: "ABC HVAC Services"
                businessType:
                  type: string
                  enum: [HVAC, Paint, Roofing]
                  example: "HVAC"
                firstName:
                  type: string
                  example: "John"
                lastName:
                  type: string
                  example: "Smith"
                email:
                  type: string
                  format: email
                  example: "john@abchvac.com"
                password:
                  type: string
                  minLength: 8
                  example: "securepassword123"
                phone:
                  type: string
                  example: "5551234567"
                website:
                  type: string
                  format: uri
                  example: "https://abchvac.com"
                address:
                  type: string
                  example: "123 Main St, City, State 12345"
                services:
                  type: array
                  items:
                    type: string
                  example: ["HVAC Repair", "Installation", "Maintenance"]
                serviceAreas:
                  type: array
                  items:
                    type: string
                  example: ["Downtown", "Suburbs"]
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Registration successful"
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          email:
                            type: string
                          name:
                            type: string
                      business:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          business_name:
                            type: string
                          business_type:
                            type: string
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Validation failed"
                  details:
                    type: array
                    items:
                      type: object
        '500':
          description: Internal server error

  /contact/submit:
    post:
      summary: Contact Form Submission
      description: Submit contact form inquiry
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - email
                - subject
                - message
              properties:
                firstName:
                  type: string
                  example: "Jane"
                lastName:
                  type: string
                  example: "Doe"
                email:
                  type: string
                  format: email
                  example: "jane@example.com"
                business:
                  type: string
                  example: "ABC Company"
                subject:
                  type: string
                  example: "Inquiry about CloudGreet"
                message:
                  type: string
                  minLength: 10
                  example: "I'm interested in learning more about your AI receptionist service."
      responses:
        '200':
          description: Message submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Message received successfully"
        '400':
          description: Validation error
        '500':
          description: Internal server error

  /pricing/plans:
    get:
      summary: Get Pricing Plans
      description: Retrieve available pricing plans
      security: []
      responses:
        '200':
          description: Pricing plans retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "pro"
                        name:
                          type: string
                          example: "Complete Solution"
                        price:
                          type: number
                          example: 200
                        currency:
                          type: string
                          example: "USD"
                        period:
                          type: string
                          example: "month"
                        features:
                          type: array
                          items:
                            type: string
                        perBookingFee:
                          type: number
                          example: 50

  /admin/auth:
    post:
      summary: Admin Authentication
      description: Authenticate admin user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: "admin123"
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Authentication failed

  /admin/analytics:
    get:
      summary: Get Admin Analytics
      description: Retrieve system analytics for admin dashboard
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Analytics data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      revenue:
                        type: object
                        properties:
                          daily:
                            type: array
                            items:
                              type: number
                          weekly:
                            type: array
                            items:
                              type: number
                          monthly:
                            type: array
                            items:
                              type: number
                      calls:
                        type: object
                        properties:
                          total:
                            type: number
                          answered:
                            type: number
                          missed:
                            type: number
                          conversionRate:
                            type: number
                          averageDuration:
                            type: number
                      appointments:
                        type: object
                        properties:
                          total:
                            type: number
                          completed:
                            type: number
                          cancelled:
                            type: number
                          completionRate:
                            type: number
                      clients:
                        type: object
                        properties:
                          new:
                            type: number
                          active:
                            type: number
                          churned:
                            type: number
                          retentionRate:
                            type: number
                          averageValue:
                            type: number
        '401':
          description: Unauthorized

  /admin/system-health:
    get:
      summary: Get System Health
      description: Retrieve system health metrics
      security:
        - BearerAuth: []
      responses:
        '200':
          description: System health data retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  systemHealth:
                    type: string
                    example: "Excellent"
                  healthPercentage:
                    type: number
                    example: 95
                  onlineServices:
                    type: number
                    example: 5
                  totalServices:
                    type: number
                    example: 6
                  systemServices:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        status:
                          type: string
                        uptime:
                          type: string
                        responseTime:
                          type: string
                        lastCheck:
                          type: string
                  systemMetrics:
                    type: object
                    properties:
                      cpu:
                        type: number
                      memory:
                        type: number
                      disk:
                        type: number
                      network:
                        type: number
        '401':
          description: Unauthorized

  /stripe/create-customer:
    post:
      summary: Create Stripe Customer
      description: Create a new Stripe customer for billing
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
              properties:
                email:
                  type: string
                  format: email
                  example: "customer@example.com"
                name:
                  type: string
                  example: "John Smith"
                phone:
                  type: string
                  example: "5551234567"
                address:
                  type: string
                  example: "123 Main St, City, State 12345"
      responses:
        '200':
          description: Customer created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      customer:
                        type: object
                        properties:
                          id:
                            type: string
                            example: "cus_1234567890"
                          email:
                            type: string
                          name:
                            type: string
        '401':
          description: Unauthorized
        '500':
          description: Internal server error

  /health/dependencies:
    get:
      summary: Check External Dependencies
      description: Check health of all external service dependencies
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Dependencies health checked
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time
                  responseTime:
                    type: number
                    example: 1500
                  dependencies:
                    type: object
                    properties:
                      database:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          responseTime:
                            type: number
                            example: 45
                          error:
                            type: string
                            nullable: true
                      stripe:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          responseTime:
                            type: number
                            example: 120
                          error:
                            type: string
                            nullable: true
                      telnyx:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          responseTime:
                            type: number
                            example: 200
                          error:
                            type: string
                            nullable: true
                      openai:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          responseTime:
                            type: number
                            example: 300
                          error:
                            type: string
                            nullable: true
                      email:
                        type: object
                        properties:
                          status:
                            type: string
                            example: "healthy"
                          responseTime:
                            type: number
                            example: 80
                          error:
                            type: string
                            nullable: true
        '401':
          description: Unauthorized

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Error message"
        details:
          type: object
          nullable: true

    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Validation failed"
        details:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                example: "invalid_type"
              expected:
                type: string
                example: "string"
              received:
                type: string
                example: "number"
              path:
                type: array
                items:
                  type: string
              message:
                type: string
                example: "Expected string, received number"
